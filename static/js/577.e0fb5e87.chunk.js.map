{"version":3,"file":"static/js/577.e0fb5e87.chunk.js","mappings":"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","sources":["redux/filter/selectors.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const selectFilter = state => state.filter;","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from 'redux/filter/selectors';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from '@emotion/styled';\nimport { Field, Form, ErrorMessage } from 'formik';\n\nconst commonButtonStyles = `\n  padding: 5px 10px;\n  font-family: inherit;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  column-gap: 5px;\n  min-width: 140px;\n  min-height: 30px;\n  margin: 0;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 16px;\n  font-family: inherit;\n  transition: color 250ms cubic-bezier(0.65, 0.05, 0.36, 1),\n    background-color 250ms cubic-bezier(0.65, 0.05, 0.36, 1),\n    border-color 250ms cubic-bezier(0.65, 0.05, 0.36, 1);\n\n  &:hover {\n    color: white;\n    background-color: black;\n    border-color: white;\n  }\n`;\n\nexport const StyledForm = styled(Form)`\n  margin-bottom: 30px;\n  display: flex;\n  flex-direction: column;\n  row-gap: 10px;\n  align-items: center;\n  padding: 20px;\n  border: 2px black solid;\n  border-radius: 5px;\n  min-width: 350px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  row-gap: 2px;\n  color: white;\n  max-width: 300px;\n`;\n\nexport const Input = styled(Field)`\n  min-width: 300px;\n  min-height: 26px;\n  padding: 1px 5px;\n  font-size: 16px;\n  outline: none;\n  border-radius: 5px;\n  border-width: 0;\n`;\n\nexport const Button = styled.button`\n  ${commonButtonStyles}\n  background-color: white;\n  border: 2px black solid;\n`;\n\nexport const StyledError = styled(ErrorMessage)`\n  font-size: 14px;\n  color: black;\n  max-width: 300px;\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {\n  selectIsLoading,\n  selectVisibleContacts,\n} from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/contactsApi';\nimport {\n  Button,\n  Input,\n  Label,\n  StyledForm,\n  StyledError,\n} from './ContactForm.styled';\nimport { Loader } from 'components/Loader';\n\nconst defaultValues = {\n  name: '',\n  number: '',\n};\n\nconst schema = Yup.object().shape({\n  name: Yup.string().required('Name is required'),\n  number: Yup.string()\n    .required('Phone number is required')\n    .matches(\n      /^[\\d()+-]+$/,\n      'Phone number must contain only 0-9 and these symbols: ( ) - +'\n    )\n    .min(8, 'Phone number must be at least 8 characters'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectVisibleContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const [determineAddBtn, setDetermineAddBtn] = useState(false);\n\n  const handleSubmitForm = (values, action) => {\n    setDetermineAddBtn(true);\n    const isInContacts = contacts.some(\n      ({ name }) => name.toLowerCase() === values.name.toLowerCase()\n    );\n\n    if (isInContacts) {\n      return toast.warn(`${values.name} is already in contacts.`);\n    }\n\n    dispatch(addContact(values)).then(() => {\n      setDetermineAddBtn(false);\n    });\n    action.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={defaultValues}\n      onSubmit={handleSubmitForm}\n      validationSchema={schema}\n    >\n      <StyledForm>\n        <Label>\n          Name\n          <Input type=\"text\" name=\"name\" />\n          <StyledError name=\"name\" component=\"div\" />\n        </Label>\n        <Label>\n          Number\n          <Input type=\"tel\" name=\"number\" />\n          <StyledError name=\"number\" component=\"div\" />\n        </Label>\n        <Button type=\"submit\" disabled={isLoading && determineAddBtn}>\n          {isLoading && determineAddBtn && <Loader />}\n          Add Contact\n        </Button>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nexport const ListItem = styled.li`\n  margin-bottom: 5px;\n`;\n\nexport const ContactInfo = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Name = styled.p`\n  font-weight: bold;\n  margin-right: 10px;\n  margin-bottom: 5px;\n`;\n\nexport const Phone = styled.p`\n  color: #007afe;\n  font-weight: bold;\n`;\n\nexport const DeleteButton = styled.button`\n  padding: 5px;\n  margin-bottom: 10px;\n  background-color: #4f4f50;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 16px;\n\n  transition: color 250ms cubic-bezier(0.65, 0.05, 0.36, 1),\n    background-color 250ms cubic-bezier(0.65, 0.05, 0.36, 1),\n    border-color 250ms cubic-bezier(0.65, 0.05, 0.36, 1);\n\n  &:hover {\n    color: white;\n    background-color: #ff4539;\n    border-color: white;\n`;\n\nexport const Empty = styled.p`\n  color: #858585;\n`;","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContacts } from 'redux/contacts/contactsApi';\nimport { Loader } from 'components/Loader';\nimport {\n  selectError,\n  selectIsLoading,\n  selectVisibleContacts,\n} from 'redux/contacts/selectors';\nimport {\n  List,\n  ListItem,\n  ContactInfo,\n  Name,\n  Phone,\n  DeleteButton,\n  Empty,\n} from './ContactList.styled';\n\nconst ContactItem = ({ id, name, phone, onDelete, isLoading }) => (\n  <ListItem key={id}>\n    <ContactInfo>\n      <Name>{name}</Name>\n      <Phone>{phone}</Phone>\n    </ContactInfo>\n    <DeleteButton\n      type=\"button\"\n      onClick={() => onDelete(id)}\n      disabled={isLoading}\n    >\n      {isLoading ? <Loader /> : 'Delete'}\n    </DeleteButton>\n  </ListItem>\n);\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <List>\n      {visibleContacts.length === 0 && !error && !isLoading && (\n        <Empty>No contacts</Empty>\n      )}\n      {error && <p>{error}</p>}\n      {visibleContacts.map(contact => (\n        <ContactItem\n          key={contact.id}\n          {...contact}\n          onDelete={id => dispatch(deleteContact(id))}\n          isLoading={isLoading}\n        />\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  padding: 5px;\n  margin-bottom: 15px;\n  margin-top: 5px;\n  width: 85%;\n  border-radius: 6px;\n  font-size: 18px;\n\n  &:hover {\n    border-color: #dcc8f7;\n    \n    transition: color 250ms cubic-bezier(0.65, 0.05, 0.36, 1),\n    background-color 250ms cubic-bezier(0.65, 0.05, 0.36, 1),\n    border-color 250ms cubic-bezier(0.65, 0.05, 0.36, 1);\n`;\n","import { Input } from './Filter.styled';\nimport { selectFilter } from 'redux/filter/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  return (\n    <Input\n      type=\"text\"\n      value={filter}\n      onChange={event => dispatch(setFilter(event.target.value.trim()))}\n    />\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 600px;\n  margin: 0 auto;\n`;\n\nexport const ContactsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 10px;\n  align-items: center;\n  padding: 20px;\n  border: 2px black solid;\n  border-radius: 5px;\n  min-width: 350px;\n`;\n\nexport const MainTitle = styled.h1`\n  margin-bottom: 20px;\n  font-size: 32px;\n  text-align: center;\n  color: white;\n`;\n\nexport const ContactsTitle = styled.p`\n  margin-bottom: 10px;\n  font-size: 24px;\n  font-weight: 700;\n  text-align: center;\n  color: white;\n`;\n\nexport const FilterTitle = styled.p`\n  margin-bottom: 3px;\n  font-size: 18px;\n  text-align: center;\n  color: white;\n`;\n","import { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useDispatch } from 'react-redux';\nimport { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\nimport { fetchContacts } from 'redux/contacts/contactsApi';\nimport { Filter } from 'components/Filter';\nimport {\n  ContactsContainer,\n  ContactsTitle,\n  FilterTitle,\n  MainTitle,\n  MainContainer,\n} from './Contacts.styled';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your Contacts</title>\n      </Helmet>\n\n      <MainContainer>\n        <MainTitle>Phonebook</MainTitle>\n        <ContactForm />\n        <ContactsTitle>Contacts</ContactsTitle>\n        <ContactsContainer>\n          <FilterTitle>Find contacts by name</FilterTitle>\n          <Filter />\n          <ContactList />\n        </ContactsContainer>\n      </MainContainer>\n    </>\n  );\n}\n"],"names":["selectFilter","state","filter","selectIsLoading","contacts","isLoading","selectError","error","selectVisibleContacts","createSelector","items","contact","name","toLowerCase","includes","StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","Label","label","_templateObject2","Input","Field","_templateObject3","Button","button","_templateObject4","StyledError","ErrorMessage","_templateObject5","defaultValues","number","schema","Yup","shape","required","matches","min","ContactForm","dispatch","useDispatch","useSelector","_useState","useState","_useState2","_slicedToArray","determineAddBtn","setDetermineAddBtn","_jsx","Formik","initialValues","onSubmit","values","action","some","_ref","toast","warn","concat","addContact","then","resetForm","validationSchema","children","_jsxs","type","component","disabled","Loader","List","ul","ListItem","li","ContactInfo","div","Name","p","Phone","DeleteButton","_templateObject6","Empty","_templateObject7","ContactItem","id","phone","onDelete","onClick","ContactList","visibleContacts","useEffect","fetchContacts","length","map","_objectSpread","deleteContact","input","Filter","value","onChange","event","setFilter","target","trim","MainContainer","ContactsContainer","MainTitle","h1","ContactsTitle","FilterTitle","Contacts","_Fragment","Helmet"],"sourceRoot":""}